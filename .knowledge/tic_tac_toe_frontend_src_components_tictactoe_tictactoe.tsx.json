{"is_source_file": true, "format": "TypeScript TSX", "description": "This file contains a Qwik component implementing a Tic Tac Toe game with local and AI modes, including game logic, AI move strategies, and UI rendering.", "external_files": ["./tictactoe.module.css"], "external_methods": ["useStylesScoped$", "$"], "published": [], "classes": [], "methods": [{"name": "checkWinner", "description": "Determines the game winner by checking all winning lines, returns winner, winning line, or draw status."}, {"name": "postAiMove", "description": "Updates game state after AI makes a move, checking for win, draw, or switching turn."}, {"name": "resetBoard", "description": "Resets the game board, toggles starting player, and initiates AI move if applicable."}, {"name": "setMode", "description": "Sets the game mode to either 'local' or 'ai', resetting the game accordingly."}, {"name": "handleCellClick", "description": "Handles user clicks on game cells, updates board, checks for win/draw, and triggers AI move if needed."}, {"name": "aiMove", "description": "Performs the AI's move using simple strategies: win, block, center, or random."}, {"name": "getCellLabel", "description": "Generates an ARIA label describing the cell's row and column."}, {"name": "cellClass", "description": "Determines CSS classes for game cells based on current state."}], "calls": ["checkWinner", "postAiMove", "setTimeout", "setMode", "handleCellClick", "aiMove"], "search-terms": ["tictactoe", "tic-tac-toe", "AI move", "player switch", "game state", "companion$", "useStore", "checkWinner", "postAiMove"], "state": 2, "file_id": 38, "knowledge_revision": 82, "git_revision": "", "revision_history": [{"77": ""}, {"81": ""}, {"82": ""}], "ctags": [], "hash": "d18fdd9ee6a827a4a6a616b5672ac3fe", "format-version": 4, "code-base-name": "tic_tac_toe_frontend", "filename": "tic_tac_toe_frontend/src/components/tictactoe/tictactoe.tsx"}